name: Build and Deploy (Docker) to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
  REPO: ${{ secrets.ARTIFACT_REPO || 'api' }}
  MEMORY: 1Gi
  CPU: "1"
  CONCURRENCY: "40"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate inputs
        run: |
          set -euo pipefail
          if [ -z "${PROJECT_ID:-}" ]; then echo "Missing GCP_PROJECT_ID secret" >&2; exit 1; fi
          if [ -z "${REGION:-}" ]; then echo "REGION not set, defaulting to asia-southeast1"; echo REGION=asia-southeast1 >> $GITHUB_ENV; fi
          if [ -z "${SERVICE:-}" ]; then echo "SERVICE not set, defaulting to mps-connect-api"; echo SERVICE=mps-connect-api >> $GITHUB_ENV; fi
          if [ -z "${REPO:-}" ]; then echo "REPO not set, defaulting to api"; echo REPO=api >> $GITHUB_ENV; fi

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Enable required services (idempotent)
        run: |
          gcloud services enable run.googleapis.com cloudbuild.googleapis.com artifactregistry.googleapis.com

      - name: Ensure Artifact Registry repo
        run: |
          set -euo pipefail
          gcloud artifacts repositories describe "$REPO" --location "$REGION" >/dev/null 2>&1 || \
          gcloud artifacts repositories create "$REPO" --location "$REGION" --repository-format docker --description "Container images"

      - name: Build and push image (Cloud Build)
        id: build
        run: |
          set -euxo pipefail
          IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$SERVICE:$GITHUB_SHA"
          # Build context is the repository root (this folder). Dockerfile is at repo root.
          gcloud builds submit --tag "$IMAGE_URI" .
          echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Deploy to Cloud Run
        run: |
          set -euxo pipefail
          gcloud run deploy "$SERVICE" \
            --image "${{ steps.build.outputs.image }}" \
            --region "$REGION" \
            --platform managed \
            --allow-unauthenticated \
            --cpu "$CPU" \
            --memory "$MEMORY" \
            --concurrency "$CONCURRENCY"

      - name: Show service URL
        run: |
          gcloud run services describe "$SERVICE" --region "$REGION" --format='value(status.url)'
