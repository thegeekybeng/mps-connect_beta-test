name: Deploy Backend to Cloud Run (Source)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
  MEMORY: 1Gi
  CPU: "1"
  CONCURRENCY: "40"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Validate inputs and set defaults
        run: |
          set -euo pipefail
          gcloud --version
          if [ -z "${PROJECT_ID:-}" ]; then
            echo "ERROR: GCP_PROJECT_ID secret is not set." >&2
            echo "Add repository secret GCP_PROJECT_ID (e.g., mps-connect-casewriter-ai)." >&2
            exit 1
          fi
          # Default REGION if not provided
          if [ -z "${REGION:-}" ]; then
            echo "REGION not set, defaulting to asia-southeast1" >&2
            echo "REGION=asia-southeast1" >> $GITHUB_ENV
          fi
          # Default SERVICE if not provided
          if [ -z "${SERVICE:-}" ]; then
            echo "SERVICE not set, defaulting to mps-connect-api" >&2
            echo "SERVICE=mps-connect-api" >> $GITHUB_ENV
          fi
          gcloud config set project "$PROJECT_ID"

      - name: Enable required services (idempotent)
        run: |
          gcloud services enable run.googleapis.com cloudbuild.googleapis.com artifactregistry.googleapis.com

      - name: Deploy to Cloud Run from source
        env:
          CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
        run: |
          set -euxo pipefail
          # Deploy current repo (this repo root is your mps-connect_testers folder)
          gcloud run deploy "$SERVICE" \
            --region "$REGION" \
            --platform managed \
            --source . \
            --allow-unauthenticated \
            --cpu "$CPU" \
            --memory "$MEMORY" \
            --concurrency "$CONCURRENCY" \
            $( [ -n "$CORS_ORIGINS" ] && echo --set-env-vars CORS_ORIGINS="$CORS_ORIGINS" )

      - name: Show service URL
        id: url
        run: |
          URL=$(gcloud run services describe "$SERVICE" --region "$REGION" --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Service URL: $URL"

      - name: Health check
        run: |
          curl -fsSL "${{ steps.url.outputs.url }}/healthz" || (echo "Health check failed" && exit 1)
